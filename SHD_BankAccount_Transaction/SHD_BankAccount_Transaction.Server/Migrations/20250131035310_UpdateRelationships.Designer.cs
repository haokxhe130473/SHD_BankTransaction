// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SHD_BankAccount_Transaction.Server.Data;

#nullable disable

namespace SHD_BankAccount_Transaction.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250131035310_UpdateRelationships")]
    partial class UpdateRelationships
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SHD_BankAccount_Transaction.Server.Models.account", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("account_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("created_time")
                        .HasColumnType("datetime2");

                    b.Property<int>("created_user_id")
                        .HasColumnType("int");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("last_modified_time")
                        .HasColumnType("datetime2");

                    b.Property<int>("last_modified_user_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("accounts");
                });

            modelBuilder.Entity("SHD_BankAccount_Transaction.Server.Models.transaction", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<decimal>("amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("created_time")
                        .HasColumnType("datetime2");

                    b.Property<int>("created_user_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<int>("from_account_id")
                        .HasColumnType("int");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("last_modified_time")
                        .HasColumnType("datetime2");

                    b.Property<int>("last_modified_user_id")
                        .HasColumnType("int");

                    b.Property<int>("to_account_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("from_account_id");

                    b.HasIndex("to_account_id");

                    b.ToTable("transactions");
                });

            modelBuilder.Entity("SHD_BankAccount_Transaction.Server.Models.transaction", b =>
                {
                    b.HasOne("SHD_BankAccount_Transaction.Server.Models.account", "from_account")
                        .WithMany("transactions")
                        .HasForeignKey("from_account_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SHD_BankAccount_Transaction.Server.Models.account", "to_account")
                        .WithMany()
                        .HasForeignKey("to_account_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("from_account");

                    b.Navigation("to_account");
                });

            modelBuilder.Entity("SHD_BankAccount_Transaction.Server.Models.account", b =>
                {
                    b.Navigation("transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
